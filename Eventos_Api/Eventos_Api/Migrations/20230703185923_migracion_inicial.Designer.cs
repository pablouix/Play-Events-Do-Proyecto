// <auto-generated />
using System;
using Eventos_Api.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eventos_Api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230703185923_migracion_inicial")]
    partial class migracion_inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("Eventos_Api.Models.Boletas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdZonaDetalle")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroAsiento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdZonaDetalle");

                    b.ToTable("Boletas");
                });

            modelBuilder.Entity("Eventos_Api.Models.Eventos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsPublico")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Organizador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("hora")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Eventos_Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Eventos_Api.Models.ZonasDetalles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("capacidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("compradas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idEvento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("precio")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("idEvento");

                    b.ToTable("ZonasDetalles");
                });

            modelBuilder.Entity("Eventos_Api.Models.Boletas", b =>
                {
                    b.HasOne("Eventos_Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eventos_Api.Models.ZonasDetalles", "ZonaDetalle")
                        .WithMany()
                        .HasForeignKey("IdZonaDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("ZonaDetalle");
                });

            modelBuilder.Entity("Eventos_Api.Models.ZonasDetalles", b =>
                {
                    b.HasOne("Eventos_Api.Models.Eventos", null)
                        .WithMany("ZonaDetalles")
                        .HasForeignKey("idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eventos_Api.Models.Eventos", b =>
                {
                    b.Navigation("ZonaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
