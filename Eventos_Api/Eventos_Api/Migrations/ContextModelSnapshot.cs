// <auto-generated />
using Eventos_Api.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eventos_Api.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Eventos_Api.Models.Eventos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("hora")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Eventos_Api.Models.ZonasDetalles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("capacidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idEvento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("precio")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("idEvento");

                    b.ToTable("ZonasDetalles");
                });

            modelBuilder.Entity("Eventos_Api.Models.ZonasDetalles", b =>
                {
                    b.HasOne("Eventos_Api.Models.Eventos", null)
                        .WithMany("ZonaDetalles")
                        .HasForeignKey("idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eventos_Api.Models.Eventos", b =>
                {
                    b.Navigation("ZonaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
